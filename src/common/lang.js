import cookie from './cookie';
const axios = require('axios');
let currLang = 'en';

export let langs = {
    common: {
        'smartspc.common.untreated':'Untreated',
        'smartspc.common.ok':'OK',
        'smartspc.common.navigation':'Navigation',
        'smartspc.common.month':'Month',
        'smartspc.common.week':'Week',
        'smartspc.common.timeWindowSize':' Time Window Size',
        'smartspc.common.dynamicTimeWindow':'Dynamic Time Window',
        'smartspc.common.staticTimeWindow':'Static Time Window',
        'smartspc.common.type':'type',
        'smartspc.common.timeWindowOption':'Time Window Option',
        'smartspc.common.abilityLack':'Lack of ability',
        'smartspc.common.processOffset':'The process is offset and the ability is good',
        'smartspc.common.processnooffsetnew':'The process is not offset and has good ability',
        'smartspc.common.processNoOffset':'The process is not offset and has good ability',
        'smartspc.common.review':'Review',
        'smartspc.common.hi': 'Hi',
        'smartspc.common.add': 'Add',
        'smartspc.common.exportTpl':"Export Template",
        'smartspc.common.export':'Export',
        'smartspc.common.import':'Import',
        'smartspc.common.modify': 'Modify',
        'smartspc.common.save': 'Save',
        'smartspc.common.delete': 'Delete',
        'smartspc.common.cancel': 'Cancel',
        'smartspc.common.accountSetting': 'Account Setting',
        'smartspc.common.logout': 'Logout',
        'smartspc.common.back': 'Back',
        'smartspc.common.nodata': 'No data',
        'smartspc.common.op': 'Operation',
        'smartspc.common.search': 'Search',
        'smartspc.common.needNumber': 'Must be a number',
        'smartspc.common.required': 'Required',
        'smartspc.common.clear': 'Clear',
        'smartspc.common.all': 'ALL',
        'smartspc.common.setting': 'Setting',
        'smartspc.common.pleaseInput': 'Please Input',
        'smartspc.common.pleaseChoose': 'Please Choose',
        'smartspc.common.des': 'Description',
        'smartspc.common.goBack': 'Go Back',
        'smartspc.common.copy': 'Copy',
        'smartspc.common.NoMoreThan': 'No more than',
        'smartspc.common.characters': 'characters',
        'smartspc.common.value': 'Value',
        'smartspc.common.view': 'View',
        'smartspc.common.no': 'No',
        'smartspc.common.day': 'Day',
        'smartspc.common.hour': 'Hour',
        'smartspc.common.minute': 'Minute',
        'smartspc.common.time': 'Time',
        'smartspc.common.gross': 'Gross',
        'smartspc.common.unit': 'Unit',
        'smartspc.common.title': 'Title',
        'smartspc.common.create': 'Create',
        'smartspc.common.user': 'User',
        'smartspc.common.password': 'Password',
        'smartspc.common.oldPassword': 'Old Password',
        'smartspc.common.newPassword': 'New Password',
        'smartspc.common.confirmPassword': 'Confirm Password',
        'smartspc.common.existed': 'Existed',
        'smartspc.common.name': 'Name',
        'smartspc.common.mobilephone': 'Mobilephone',
        'smartspc.common.email': 'Email',
        'smartspc.common.right': 'Right',
        'smartspc.common.submit': 'Submit',
        'smartspc.common.cycle': 'Cycle',
        'smartspc.common.modifyAvatar': 'Modify Avatar',
        'smartspc.common.modifiedAvatarSuccessfully': 'Modified avatar successfully',
        'smartspc.common.maxSizeNoMoreThan2MB': 'Max size no more than 2MB',
        'smartspc.common.between3and20characters': 'The length is between 3 and 20 characters',
        'smartspc.common.PleaseEnterPasswordAgain': 'Please enter password again',
        'smartspc.common.thePasswordsNotMatch': 'The two passwords do not match',
        'smartspc.common.pagefooter': 'Copyright © JWI Innovation Software (Shenzhen) Ltd.',
        'smartspc.common.noSpecialCharacters': 'Special characters cannot be included',
        'smartspc.common.outOfLimit': 'Out of limit',
        'smartspc.common.timeHorizonRequred': 'Time horizon required'

    },
    baseData: {
        'smartspc.baseData.level':'Level',
        'smartspc.baseData.validLevel':'The front level can not be empty',
        'smartspc.baseData.codeRule':'Same as variable naming rules',
        'smartspc.baseData.mustBeAPositiveInteger':'Must Be A Positive Integer',
        'smartspc.baseData.sizeRule1':'USL>=LSL',
        'smartspc.baseData.sizeRule2':'USL>= Target >= LSL',
        'smartspc.baseData.sizeRuleUCL1':'UCL>=LCL',
        'smartspc.baseData.reviewUploadFile': 'Review Upload File',
        'smartspc.baseData.attributeDefinition': 'Attribute Definition',
        'smartspc.baseData.attributeValueSetting': 'Attribute Value Setting',
        'smartspc.baseData.parameterConfiguration': 'Parameter Configuration',
        'smartspc.baseData.project': 'Object',
        'smartspc.baseData.code': 'Code',
        'smartspc.baseData.params': 'Params',
        'smartspc.baseData.USL': 'USL',
        'smartspc.baseData.UCL': 'UCL',
        'smartspc.baseData.LCL': 'LCL',
        'smartspc.baseData.LSL': 'LSL',
        'smartspc.baseData.target': 'Target',
        'smartspc.baseData.units': 'Units',
        'smartspc.baseData.attribute': 'Attribute',
        'smartspc.baseData.attributeValue': 'Attribute Value',
        'smartspc.baseData.addNewProjectAttribute': 'New Object Attribute',
        'smartspc.baseData.modifyProjectAttribute': 'Modify Object Attribute',
        'smartspc.baseData.addNewAttributeValue': 'New Attribute Value',
        'smartspc.baseData.modifyAttributeValue': 'Modify Attribute Value',
        'smartspc.baseData.projectSetting': 'Object Setting',
        'smartspc.baseData.addProjectValue': 'Add Object Value',
        'smartspc.baseData.editProjectValue': 'Edit Object Value',
        'smartspc.baseData.samplingMethod': 'Sampling Method',
        'smartspc.baseData.samplingStartTime': 'Sampling Start Time',
        'smartspc.baseData.sampleConfiguration': 'Sample Configuration',
        'smartspc.baseData.packetSize': 'Packet size',
        'smartspc.baseData.condition': 'Condition',
        'smartspc.baseData.samplingPeriod': 'Sampling Period',
        'smartspc.baseData.thewholesample': 'The whole sample',
        'smartspc.baseData.systematicSample': 'Systematic Sample',
        'smartspc.baseData.conditionRequired': 'Condition is required',
        'smartspc.baseData.controlLimitsManagement': 'Control Limits Management',
        'smartspc.baseData.mustBeANumber': 'must be a number',
        'smartspc.baseData.addParams': 'Add Params',
        'smartspc.baseData.proSetTipPart1': 'Tip: Improper modification to this item may result',
        'smartspc.baseData.proSetTipPart2': 'in errors in data configuration and alarm message.',
        'smartspc.baseData.mustBeAPositiveIntegerandno2': 'Must be a Positive Integer and more than 1',
        'smartspc.baseData.controlAutomatic': 'Control data automatic calculation'

    },
    dashboard: {
        'smartspc.dashboard.defined':'Defined Components',
        'smartspc.dashboard.circle':'Circle',
        'smartspc.dashboard.circleColor':'Circle Color',
        'smartspc.dashboard.target': 'Target',
        'smartspc.dashboard.text': 'Text',
        'smartspc.dashboard.mini': 'Mini',
        'smartspc.dashboard.small': 'Small',
        'smartspc.dashboard.middle': 'Middle',
        'smartspc.dashboard.big': 'Big',
        'smartspc.dashboard.x-large': 'X-large',
        'smartspc.dashboard.xx-large': 'XX-large',
        'smartspc.dashboard.controlChart': 'Econometric control charts',
        'smartspc.dashboard.controlChart2': 'Counting control charts',
        'smartspc.dashboard.components': 'Components',
        'smartspc.dashboard.boardDefinition' : 'Board Definition',
        'smartspc.dashboard.boardShow' : 'Board Show',
        'smartspc.dashboard.board' : 'Board',
        'smartspc.dashboard.shareTo' : 'Share To',
        'smartspc.dashboard.boardName' : 'Board Name',
        'smartspc.dashboard.all' : 'All',
        'smartspc.dashboard.justMe' : 'Just me',
        'smartspc.dashboard.partOfPeople' : 'Part Of People',
        'smartspc.dashboard.boardIcon' : 'Board Icon',
        'smartspc.dashboard.extentOfCompetence' : 'Extent of competence',
        'smartspc.dashboard.dataSource' : 'Data Source',
        'smartspc.dashboard.pleaseSelectPro' : 'Please Select Object',
        'smartspc.dashboard.pleaseSelectValue' : 'Please Select Value',
        'smartspc.dashboard.pleaseChooseImg' : 'Please Choose Img',
        'smartspc.dashboard.addDataSource' : 'Add Data Source',
        'smartspc.dashboard.histogram' : 'Histogram',
        'smartspc.dashboard.table' : 'Table',
        'smartspc.dashboard.chart' : 'Chart',
        'smartspc.dashboard.img' : 'Img',
        'smartspc.dashboard.boxPlots' : 'BoxPlots',
        'smartspc.dashboard.scatter' : 'Scatter',
        'smartspc.dashboard.refreshFrequency' : 'Refresh Frequency',
        'smartspc.dashboard.line' : 'Line',
        'smartspc.dashboard.plato' : 'Plato',
        'smartspc.dashboard.figure' : 'Figure',
        'smartspc.dashboard.indicator' : 'Indicator',
        'smartspc.dashboard.baseComponents' : 'Base Components',
        'smartspc.dashboard.spcComponents' : 'SPC Components',
        'smartspc.dashboard.running' : 'Running Chart',
        'smartspc.dashboard.distributionAnalysis' : 'Distribution Analysis',
        'smartspc.dashboard.fontSize' : 'Font Size',
        'smartspc.dashboard.fontWeight' : 'Font Weight',
        'smartspc.dashboard.regular' : 'Regular',
        'smartspc.dashboard.bold' : 'Bold',
        'smartspc.dashboard.colour' : 'Colour',
        'smartspc.dashboard.averageValue' : 'AverageValue',
        'smartspc.dashboard.max' : 'Max',
        'smartspc.dashboard.median' : 'Median',
        'smartspc.dashboard.min' : 'Min',
        'smartspc.dashboard.passRateSingle-board' : 'Pass rate of single-board',
        'smartspc.dashboard.passRateTestItems' : 'Pass rate of test items',
        'smartspc.dashboard.totalTestsSingle-board' : 'Total tests of single-board',
        'smartspc.dashboard.unitValue' : 'Unit value',
        'smartspc.dashboard.parameter' : 'Parameter',
        'smartspc.dashboard.upload' : 'Upload',
        'smartspc.dashboard.style' : 'Style',
        'smartspc.dashboard.polylineColor' : 'Polyline Color',
        'smartspc.dashboard.polylineStyle' : 'Polyline Style',
        'smartspc.dashboard.controlLineColor' : 'Control Line Color',
        'smartspc.dashboard.controlLineStyle' : 'Control Line Style',
        'smartspc.dashboard.abnormalPointColor' : 'Abnormal Point Color',
        'smartspc.dashboard.controlChartType' : 'Control Chart Type',
        'smartspc.dashboard.histogramColor' : 'Histogram Color',
        'smartspc.dashboard.normalLineColor' : 'Normal Line Color',
        'smartspc.dashboard.normalLineStyle' : 'Normal Line Style',
        'smartspc.dashboard.displayTheControlLine' : 'Display the control line',
        'smartspc.dashboard.cabinetColor' : 'Cabinet Color',
        'smartspc.dashboard.quartileLineColor' : 'Quartile Line Color',
        'smartspc.dashboard.quartileLineStyle' : 'Quartile Line Style',
        'smartspc.dashboard.comparisonItem' : 'Comparison Item',
        'smartspc.dashboard.cylindricalColor' : 'Cylindrical Color',
        'smartspc.dashboard.percentageLineColor' : 'Percentage Line Color',
        'smartspc.dashboard.percentageLineStyle' : 'Percentage Line Style',
        'smartspc.dashboard.scatterColor' : 'Scatter Color',
        'smartspc.dashboard.displayUntil' : 'Display Until',
        'smartspc.dashboard.X-axis' : 'X-axis',
        'smartspc.dashboard.Y-axis' : 'Y-axis',
        'smartspc.dashboard.percentageLineStyle' : 'Percentage Line Style',
        'smartspc.dashboard.outlier' : 'outlier',
        'smartspc.dashboard.message' : 'message',
        'smartspc.dashboard.observation' : 'observation',
        'smartspc.dashboard.fullScreen' : 'Full screen',
        'smartspc.dashboard.lineWeight' : 'Line Weight',
        'smartspc.dashboard.waterMark' : 'Water Mark',
        'smartspc.dashboard.gridQuantity' : 'Grid Quantity',
        'smartspc.dashboard.scope' : 'Scope',
        'smartspc.dashboard.meanValue' : 'Mean Value',
        'smartspc.dashboard.std' : 'STD',
        'smartspc.dashboard.lineWeight' : 'Line Weight',
        'smartspc.dashboard.defectRate' : 'Defect Rate',
        'smartspc.dashboard.completeParameters' : 'Please fill in the complete parameters',
        'smartspc.dashboard.imgnotexceed800KB' : 'Pictures uploaded should not exceed 800kb',
        'smartspc.dashboard.illegalChars' : 'cannot contain illegal characters'
    },
    alarm:{
        'smartspc.alarm.alarmBoard': 'Alarm Board',
        'smartspc.alarm.index': 'Index',
        'smartspc.alarm.alarmObjects': 'Alarm Objects',
        'smartspc.alarm.product': 'Product',
        'smartspc.alarm.abnormalIndex': 'Abnormal Index',
        'smartspc.alarm.abnormalInformation': 'Abnormal information',
        'smartspc.alarm.date': 'Date',
        'smartspc.alarm.ops': 'Ops',
        'smartspc.alarm.alarmStatistics': 'Alarm Statistics',
        'smartspc.alarm.itemValue': 'Item Value',
        'smartspc.alarm.number': 'Number',
        'smartspc.alarm.alarmDetails': 'Alarm details',
        'smartspc.alarm.details': 'Details',
        'smartspc.alarm.processFlow': 'Process Flow',
        'smartspc.alarm.analysisCause': 'Analysis Cause',
        'smartspc.alarm.handleSuggestion':'Handle Suggestion',
        'smartspc.alarm.something': 'Something',
        'smartspc.alarm.node': 'Node',
        'smartspc.alarm.executor': 'Executor',
        'smartspc.alarm.processingTime': 'Processing Time',
        'smartspc.alarm.pending': 'Pending',
        'smartspc.alarm.handled': 'Handled',
        'smartspc.alarm.alarmConfiguration': 'Alarm Configuration',
        'smartspc.alarm.configuration': 'Configuration',
        'smartspc.alarm.toConfigure': 'To Configure',
        'smartspc.alarm.name': 'Name',
        'smartspc.alarm.cuttingValue': 'Cutting Value',
        'smartspc.alarm.legend': 'Legend',
        'smartspc.alarm.parameterName': 'Parameter Name',
        'smartspc.alarm.specificationUpper': 'Specification-Upper',
        'smartspc.alarm.specificationLower': 'Specification-Lower',
        'smartspc.alarm.targetValue': 'Target Value',
        'smartspc.alarm.company': 'Company',
        'smartspc.alarm.alarmRule': 'Alarm Rule',
        'smartspc.alarm.alarmMessage': 'Warning Message',
        'smartspc.alarm.percentage': 'percentage',
        'smartspc.alarm.alarmProcess': 'Alarm Process'
    },
    analysis:{
        'smartspc.analysis.produceRate':'Defective Product Rate',
        'smartspc.analysis.correlationAnalysis': 'Correlation Analysis',
        'smartspc.analysis.product': 'Product',
        'smartspc.analysis.process': 'Process',
        'smartspc.analysis.correlation': 'Correlation',
        'smartspc.analysis.analysisBetweenBatches': 'Quality time series analysis between batches',
        'smartspc.analysis.analysisiInBatch': 'Quality time series analysis in batch',
        'smartspc.analysis.batch': 'Batch',
        'smartspc.analysis.statisticalMethod': 'Statistical Method',
        'smartspc.analysis.highValue': 'High value',
        'smartspc.analysis.lowValue': 'Low Value',
        'smartspc.analysis.range': 'Range',
        'smartspc.analysis.timeInterval': 'Time interval',
        'smartspc.analysis.minimumProduction': 'Minimum production quantity',
        'smartspc.analysis.timeRange': 'Time range',
        'smartspc.analysis.object': 'Object',
        'smartspc.analysis.runChart': 'Run chart',
        'smartspc.analysis.wholeProcessCalculation': 'Whole Process Calculation',
        'smartspc.analysis.startDate': 'Start Date',
        'smartspc.analysis.endDate': 'End Date',
        'smartspc.analysis.failureWarning': 'Failure rate prediction and early warning',
        'smartspc.analysis.forecastCycle': 'Forecast Cycle',
        'smartspc.analysis.historicalData': 'Historical Data',
        'smartspc.analysis.nearly7days': 'Nearly 7 days',
        'smartspc.analysis.nearly30days': 'Nearly 30 days',
        'smartspc.analysis.productQualification': 'Analysis of product qualification rate trend',
        'smartspc.analysis.CpkTrendAnalysis': 'Cpk trend analysis',
        'smartspc.analysis.measuredValueDistribution': 'Analysis of measured value distribution',
        'smartspc.analysis.percentOfPass': 'Percent of pass',
        'smartspc.analysis.comparativeItem': 'Comparative Item',
        'smartspc.analysis.fallingRangeT3': 'Falling range Top3'

    },
    report:{
      "smartspc.report.incontrollableAnalysis":"Incontrollable Analysis",
      "smartspc.report.incontrollableEvnet":" Incontrollable Evnet",
      "smartspc.report.paramFluctuate":"Parameter fluctuation",
      "smartspc.report.cpkReport":"CPK 报告",
      "smartspc.report.topFault":"Top  Fault parameter term",
      "smartspc.report.contentSelection":'Content Selection',
      "smartspc.report.originalDataExport":'Original Data Export'
    }
};

export let getFirstLanguage = function(){
    var language = navigator.languages && navigator.languages[0] || // Chrome / Firefox
            navigator.language ||   // All browsers
            navigator.userLanguage; // IE <= 10

            if (!Lockr.get('locale')) {

                Lockr.set('locale', language);
                return language;
            } else {
                return Lockr.get('locale');
            }
};

export let setLang = async function(code){
    !code && (code = getFirstLanguage());

    // 如果设置的语言，和当前的语言一样，则返回
    if(code == currLang) return;

    let token = cookie.getCookie('token');
    let opts = { headers: {token} };
    let langkeies = [];
    for(let modulekey in langs){
        for(let langkey in langs[modulekey]){
            langkeies.push(langkey);
        }
    }

    let ret = (await axios.post(`${window.i18n}/i18nResource/queryI18nResourceList`, {locale: code, keySet: langkeies}, opts)).data.result;

    for(let modulekey in langs){
        for(let langkey in langs[modulekey]){
            (langs[modulekey][langkey] && ret[langkey]) && (langs[modulekey][langkey] = ret[langkey]);
        }
    }
    currLang = code;
};
